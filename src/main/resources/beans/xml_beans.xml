<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd"
		default-autowire="byType"
		>

	<context:property-placeholder location="application.properties" />


	<!-- Bean iphone_xs will use xml to configure the object Phone.
			Bean will be created using setter methods named setPropName where PropName is the name of the property being set. -->
	<bean id="iphone_xs" class="com.spring_notes.model.Phone">
		<property name="name">
			<value>iPhone xs</value>
		</property>

		<property name="manufacture">
			<value>Apple Inc.</value>
		</property>

		<property name="screenSize">
			<value>5.8</value>
		</property>
	 </bean>

	<!-- Below Bean is similar to above except:
				1) It uses the value attribute instead of a child property tag
				2) It uses the file application.properties and the above context:property-placeholder tag to inject predefined data -->
	<bean id="iphone_11" class="com.spring_notes.model.Phone">
		<property name="name" value="${phoneName}" />
		<property name="manufacture" value="${phoneManufacture}" />
		<property name="screenSize" value="${phoneScreenSize}" />
	</bean>

	<!-- Below Bean will use the constructor to build the object. The name attribute specifies the name of the param of the constructor, index specifies the position of the param.
	 -->
	<bean id="galaxy_s10" class="com.spring_notes.model.Phone" >
		<constructor-arg name="name" value="Galaxy S10" />
		<constructor-arg index="1" value="Samsung" />
		<constructor-arg name="screenSize" value="5.8" />
	</bean>

	<!-- Below Bean uses the p namespace (declared above) to use the setter methods for specific props
	 -->
	<bean id="pixel" class="com.spring_notes.model.Phone" p:name="Pixel 4" p:manufacture="Google" p:screenSize="5.0" />

	<!--
	-->
	<bean id="iphone_5s" class="com.spring_notes.model.Phone" p:name="iPhone 5s" p:manufacture="Apple Inc." p:screenSize="5.0" primary="true" />
	<bean id="purchase1" class="com.spring_notes.model.PhonePurchase" autowire="byType" p:qty="10" />

	<!--
	-->
	<bean id="purchase2" class="com.spring_notes.model.PhonePurchase" autowire="constructor" />

	<!--
	 -->
	<bean id="phone" class="com.spring_notes.model.Phone" p:name="Generic Smartphone" p:manufacture="FANG" p:screenSize="5.2" />
	<bean id="purchase3" class="com.spring_notes.model.PhonePurchase" autowire="byName" p:qty="1" />

	<!--
	-->
	<bean id="purchase4" class="com.spring_notes.model.PhonePurchase" p:qty="6" >
		<property name="phone">
			<bean class="com.spring_notes.model.Phone" p:name="Note 10" p:manufacture="Samsung" p:screenSize="6.8" primary="true" />
		</property>
	</bean>

	<bean id="phones" class="com.spring_notes.model.PhoneCollections" >
		<property name="phones">
			<list>
				<ref bean="iphone_xs" />
				<ref bean="iphone_11" />
				<ref bean="iphone_xs" />
			</list>
		</property>

		<property name="uniquePhones">
			<set>
				<ref bean="iphone_xs" />
				<ref bean="iphone_11" />
				<ref bean="iphone_xs" />
			</set>
		</property>

		<property name="NAME_maps_PHONE">
			<map>
				<entry key="Javi" value-ref="iphone_xs" />
				<entry key="Lupe" value-ref="pixel" />
			</map>
		</property>
	</bean>

</beans>